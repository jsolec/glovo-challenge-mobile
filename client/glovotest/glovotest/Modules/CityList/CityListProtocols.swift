//
//  CityListProtocols.swift
//  glovotest
//
//  Created Jesús Solé on 16/12/2018.
//  Copyright © 2018 Jesús Solé. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol CityListWireframeProtocol: class {
    func presentMapModule(cities: [CityModel], citySelected: CityModel)
}
//MARK: Presenter -
protocol CityListPresenterProtocol: class {
    func getCountries()
    func reloadData()
    
    func getCountryName(section: Int) -> String?
    func getCountryCount() -> Int
    
    func getCityName(indexPath: IndexPath) -> String?
    func getCityCountByCountry(section: Int) -> Int
    
    func citySelected(indexPath: IndexPath)
}

//MARK: Interactor -
protocol CityListInteractorProtocol: class {

    var presenter: CityListPresenterProtocol?  { get set }
    
    func getCountries()
    func getCountry(section: Int) -> CountryModel?
    func getCountryName(section: Int) -> String?
    func getCountryCount() -> Int
    
    func getCities() -> [CityModel]
    func getCity(indexPath: IndexPath) -> CityModel?
    func getCityName(indexPath: IndexPath) -> String?
    func getCityCountByCountry(section: Int) -> Int
}

//MARK: View -
protocol CityListViewProtocol: class {

    var presenter: CityListPresenterProtocol?  { get set }
    
    func getCountries()
    func reloadData()
}
