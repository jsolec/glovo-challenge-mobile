//
//  CityListPresenter.swift
//  glovotest
//
//  Created Jesús Solé on 16/12/2018.
//  Copyright © 2018 Jesús Solé. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class CityListPresenter: CityListPresenterProtocol {

    weak private var view: CityListViewProtocol?
    var interactor: CityListInteractorProtocol?
    private let router: CityListWireframeProtocol

    init(interface: CityListViewProtocol, interactor: CityListInteractorProtocol?, router: CityListWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    func getCountries() {
        self.interactor?.getCountries()
    }
    
    func reloadData() {
        self.view?.reloadData()
    }
    
    func getCountryCount() -> Int {
        return self.interactor?.getCountryCount() ?? 0
    }
    
    func getCountryName(section: Int) -> String? {
        return self.interactor?.getCountryName(section: section)
    }
    
    func getCityName(indexPath: IndexPath) -> String? {
        return self.interactor?.getCityName(indexPath: indexPath)
    }
    
    func getCityCountByCountry(section: Int) -> Int {
        return self.interactor?.getCityCountByCountry(section: section) ?? 0
    }
    
    func citySelected(indexPath: IndexPath) {
        if let cities = self.interactor?.getCities(), let city =  self.interactor?.getCity(indexPath: indexPath) {
            self.showMap(cities: cities, citySelected: city)
        }
    }
    
    func showMap(cities: [CityModel], citySelected: CityModel) {
        self.router.presentMapModule(cities: cities, citySelected: citySelected)
    }
}
