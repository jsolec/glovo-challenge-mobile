//
//  CityListInteractor.swift
//  glovotest
//
//  Created Jesús Solé on 16/12/2018.
//  Copyright © 2018 Jesús Solé. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class CityListInteractor: CityListInteractorProtocol {
    weak var presenter: CityListPresenterProtocol?
    var cities: [CityModel]!
    var countries: [CountryModel]?
    var citiesByCountry: Dictionary<CountryModel, [CityModel]>!
    
    func getCountries() {
        let countries = API.manager.getCountries()
        let _ = countries.observeNext { (countries) in
            self.countries = countries
            self.orderCities()
            self.presenter?.reloadData()
        }
    }
    
    func orderCities() {
        if self.citiesByCountry == nil {
            self.citiesByCountry = Dictionary<CountryModel, [CityModel]>()
            if let countries = self.countries {
                for country in countries {
                    var cities = [CityModel]()
                    for city in self.cities {
                        if country.code == city.countryCode {
                            cities.append(city)
                        }
                    }
                    self.citiesByCountry![country] = cities
                }
            }
        }
    }
    
    func getCities() -> [CityModel] {
        return self.cities
    }
    
    func getCountry(section: Int) -> CountryModel? {
        return self.countries?[section]
    }
    
    func getCountryCount() -> Int {
        return self.countries?.count ?? 0
    }
    
    func getCountryName(section: Int) -> String? {
        return self.getCountry(section: section)?.name
    }
    
    func getCity(indexPath: IndexPath) -> CityModel? {
        if let country = self.getCountry(section: indexPath.section) {
            return self.citiesByCountry?[country]?[indexPath.row]
        }
        return nil
    }
    
    func getCityCountByCountry(section: Int) -> Int {
        if let country = self.getCountry(section: section) {
            return self.citiesByCountry?[country]?.count ?? 0
        }
        return 0
    }
    
    func getCityName(indexPath: IndexPath) -> String? {
        return self.getCity(indexPath: indexPath)?.name
    }
}
